name: Java CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Run Maven build
      - name: Build with Maven
        run: mvn clean install

      # 5. Deploy to GitHub Packages
      - name: Deploy to GitHub Packages
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn deploy -DskipTests

      - name: Debug Maven Deploy
        run: mvn clean deploy -X

      - name: Test GitHub API with token
        run: curl -u "$GITHUB_ACTOR:$GITHUB_TOKEN" https://api.github.com/user
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      # 6. Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .

      # 7. Push Docker image to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
